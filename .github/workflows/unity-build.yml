name: Unity Build and Release

on:
  push:
    branches: [ "ci-testtestestststest" ]

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Cache Unity Library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ runner.os }}-${{ hashFiles('**/Packages/manifest.json') }}

      - name: Build Unity project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          unityVersion: 6000.2.6f2
          projectPath: .
          targetPlatform: StandaloneWindows64
          allowDirtyBuild: true

      - name: Zip Build
        run: |
          cd build
          zip -r UnityBuild-Windows64.zip StandaloneWindows64
          cd ..

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: UnityBuild-Windows64
          path: build/StandaloneWindows64

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v1.0.${{ github.run_number }}"
          release_name: "Unity Build ${{ github.run_number }}"
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/UnityBuild-Windows64.zip
          asset_name: UnityBuild-Windows64.zip
          asset_content_type: application/zip
