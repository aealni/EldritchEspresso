name: Unity CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Cache Unity Library
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      - name: Build project
        uses: game-ci/unity-builder@v4
        with:
          unityVersion: 6000.2.4f1
          targetPlatform: StandaloneWindows64
          projectPath: .
          allowDirtyBuild: true

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: UnityBuild-Windows
          path: build/StandaloneWindows64

  release:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: UnityBuild-Windows
          path: build

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          files: build/**
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify-failure:
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Get short commit hash
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Send Discord failure notification
        uses: Ilshidur/action-discord@master
        with:
          args: "‚ùå Unity build failed for ${{ github.actor }} on commit [${{ env.SHORT_SHA }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})."
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
